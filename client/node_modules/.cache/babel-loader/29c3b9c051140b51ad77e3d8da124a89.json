{"ast":null,"code":"var _jsxFileName = \"/home/mithun/Documents/project-tracking/client/src/components/login/index.js\";\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport { Form, Icon, Input, Button, Checkbox, Modal, Spin, message } from \"antd\";\nimport Header from \"../../containers/header/header-container\";\nimport dictionary from \"../../config/static/Dictionary\";\nimport { compareObjects } from \"../../utils/utils\";\nimport { setAuthToken } from \"../../services/auth\";\nimport \"./login.scss\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const {\n        form,\n        login\n      } = this.props;\n      e.preventDefault();\n      form.validateFields(async (err, values) => {\n        if (!err) {\n          await Object.keys(values).forEach(key => !values[key] && delete values[key]);\n          this.setState({\n            isLoading: true\n          });\n          login(values);\n        }\n      });\n    };\n\n    this.state = {\n      isLoading: true,\n      location: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    const {\n      location\n    } = this.props;\n\n    if (location.search === \"?status=false\") {\n      message.success(dictionary.LOGOUT_SUCCESSFUL_MSG);\n    }\n  }\n\n  async componentDidMount() {\n    const {\n      history\n    } = this.props;\n    const user = await localStorage.getItem(\"userDetails\");\n\n    if (user) {\n      history.push(\"dashboard\");\n    }\n\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      loginResponse,\n      history\n    } = this.props;\n\n    if (compareObjects(loginResponse, prevProps.loginResponse)) {\n      if (loginResponse && loginResponse.success) {\n        if (loginResponse.data.position === \"MANAGER\") {\n          localStorage.setItem(\"userDetails\", JSON.stringify(loginResponse.data));\n          localStorage.setItem(\"token\", loginResponse.token);\n          setAuthToken();\n          history.push(\"dashboard\");\n        } else {\n          Modal.error({\n            onCancel: this.setState({\n              isLoading: false\n            }),\n            title: \"Error\",\n            content: \"You are not authorised to login as a admin\"\n          });\n        }\n      } else if (loginResponse && loginResponse.message) {\n        Modal.error({\n          onCancel: this.setState({\n            isLoading: false\n          }),\n          title: \"Error\",\n          content: loginResponse.message\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      isLoading\n    } = this.state;\n    const {\n      form\n    } = this.props;\n    const {\n      getFieldDecorator\n    } = form;\n    return /*#__PURE__*/React.createElement(Spin, {\n      size: \"large\",\n      spinning: isLoading,\n      tip: dictionary.LOADING_MSG,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"centerText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: () => this.handleSubmit(window.event),\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, getFieldDecorator(\"email\", {\n      rules: [{\n        required: true,\n        message: dictionary.INPUT_USER_NAME_MSG\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }\n      }),\n      placeholder: dictionary.USER_NAME_MSG,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, getFieldDecorator(\"password\", {\n      rules: [{\n        required: true,\n        message: dictionary.INPUT_PASSWORD_MSG\n      }]\n    })( /*#__PURE__*/React.createElement(Input.Password, {\n      prefix: /*#__PURE__*/React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: \"rgba(0,0,0,.25)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }\n      }),\n      type: \"password\",\n      placeholder: dictionary.PASSWORD_MSG,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, getFieldDecorator(\"remember\", {\n      valuePropName: \"checked\",\n      initialValue: true\n    })( /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 20\n      }\n    }, dictionary.REMEMBER_ME_LABEL)), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Log in\"))))));\n  }\n\n}\n\nexport default Form.create({\n  name: \"login_form\"\n})(LoginComponent);","map":{"version":3,"sources":["/home/mithun/Documents/project-tracking/client/src/components/login/index.js"],"names":["React","Component","Form","Icon","Input","Button","Checkbox","Modal","Spin","message","Header","dictionary","compareObjects","setAuthToken","LoginComponent","constructor","props","handleSubmit","e","form","login","preventDefault","validateFields","err","values","Object","keys","forEach","key","setState","isLoading","state","location","UNSAFE_componentWillMount","search","success","LOGOUT_SUCCESSFUL_MSG","componentDidMount","history","user","localStorage","getItem","push","componentDidUpdate","prevProps","loginResponse","data","position","setItem","JSON","stringify","token","error","onCancel","title","content","render","getFieldDecorator","LOADING_MSG","window","event","rules","required","INPUT_USER_NAME_MSG","color","USER_NAME_MSG","INPUT_PASSWORD_MSG","PASSWORD_MSG","valuePropName","initialValue","REMEMBER_ME_LABEL","create","name"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport {\n  Form,\n  Icon,\n  Input,\n  Button,\n  Checkbox,\n  Modal,\n  Spin,\n  message,\n} from \"antd\";\nimport Header from \"../../containers/header/header-container\";\nimport dictionary from \"../../config/static/Dictionary\";\nimport { compareObjects } from \"../../utils/utils\";\nimport { setAuthToken } from \"../../services/auth\";\nimport \"./login.scss\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      location: [],\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    const { location } = this.props;\n    if (location.search === \"?status=false\") {\n      message.success(dictionary.LOGOUT_SUCCESSFUL_MSG);\n    }\n  }\n\n  async componentDidMount() {\n    const { history } = this.props;\n    const user = await localStorage.getItem(\"userDetails\");\n    if (user) {\n      history.push(\"dashboard\");\n    }\n    this.setState({ isLoading: false });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { loginResponse, history } = this.props;\n    if (compareObjects(loginResponse, prevProps.loginResponse)) {\n      if (loginResponse && loginResponse.success) {\n        if (loginResponse.data.position === \"MANAGER\") {\n          localStorage.setItem(\n            \"userDetails\",\n            JSON.stringify(loginResponse.data)\n          );\n          localStorage.setItem(\"token\", loginResponse.token);\n          setAuthToken();\n          history.push(\"dashboard\");\n        } else {\n          Modal.error({\n            onCancel: this.setState({ isLoading: false }),\n            title: \"Error\",\n            content: \"You are not authorised to login as a admin\",\n          });\n        }\n      } else if (loginResponse && loginResponse.message) {\n        Modal.error({\n          onCancel: this.setState({ isLoading: false }),\n          title: \"Error\",\n          content: loginResponse.message,\n        });\n      }\n    }\n  }\n\n  handleSubmit = (e) => {\n    const { form, login } = this.props;\n    e.preventDefault();\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        await Object.keys(values).forEach(\n          (key) => !values[key] && delete values[key]\n        );\n        this.setState({ isLoading: true });\n        login(values);\n      }\n    });\n  };\n\n  render() {\n    const { isLoading } = this.state;\n    const { form } = this.props;\n    const { getFieldDecorator } = form;\n\n    return (\n      <Spin size=\"large\" spinning={isLoading} tip={dictionary.LOADING_MSG}>\n        <Header />\n        <div className=\"login-full\">\n          <div className=\"login-block\">\n            <h2 className=\"centerText\">Login</h2>\n            <Form\n              onSubmit={() => this.handleSubmit(window.event)}\n              className=\"login-form\"\n            >\n              <Form.Item>\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    { required: true, message: dictionary.INPUT_USER_NAME_MSG },\n                  ],\n                })(\n                  <Input\n                    prefix={\n                      <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    placeholder={dictionary.USER_NAME_MSG}\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"password\", {\n                  rules: [\n                    { required: true, message: dictionary.INPUT_PASSWORD_MSG },\n                  ],\n                })(\n                  <Input.Password\n                    prefix={\n                      <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                    }\n                    type=\"password\"\n                    placeholder={dictionary.PASSWORD_MSG}\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator(\"remember\", {\n                  valuePropName: \"checked\",\n                  initialValue: true,\n                })(<Checkbox>{dictionary.REMEMBER_ME_LABEL}</Checkbox>)}\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  Log in\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </Spin>\n    );\n  }\n}\n\nexport default Form.create({ name: \"login_form\" })(LoginComponent);\n"]},"metadata":{},"sourceType":"module"}