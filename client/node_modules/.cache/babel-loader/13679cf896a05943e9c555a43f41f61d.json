{"ast":null,"code":"var _jsxFileName = \"/home/mithun/Documents/project-tracking/client/src/components/users/newUsers.js\";\n\n/* eslint-disable no-unused-expressions */\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { Layout, Form, Row, Col, Input, Button, Select, message, DatePicker, TreeSelect } from \"antd\";\nimport dictionary from \"../../config/static/Dictionary\";\nimport Spinner from \"../common/Spinner/Spinner\";\nimport HeaderMain from \"../../containers/header/header-container\";\nimport Sidebar from \"../../containers/sidebar/sidebar-container\";\nimport Footer from \"../common/footer\";\nimport * as OPTIONS from \"../../helpers/selectOptions\";\nimport { compareObjects } from \"../../utils/utils\";\nimport * as time from \"../../utils/timeUtils\";\nimport Regex from \"../../utils/regex\";\nconst {\n  Header,\n  Content\n} = Layout;\nconst {\n  TreeNode\n} = TreeSelect;\nconst {\n  Option\n} = Select;\n\nclass NewUSer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      const {\n        form\n      } = this.props;\n      e.preventDefault();\n      form.validateFields(async (err, values) => {\n        if (!err) {\n          await Object.keys(values).forEach(key => !values[key] && delete values[key]);\n          this.createUser(values);\n          this.setState({\n            loading: true,\n            formData: values\n          });\n        } else {\n          this.setState({\n            loading: false\n          });\n        }\n      });\n    };\n\n    this.getUsers = () => {\n      const {\n        getAllUsers\n      } = this.props;\n      getAllUsers();\n    };\n\n    this.createUser = data => {\n      const {\n        createUser,\n        updateUser,\n        currentUser\n      } = this.props;\n\n      if (currentUser) {\n        data.id = currentUser._id;\n        updateUser(data);\n      } else {\n        createUser(data);\n      }\n    };\n\n    this.onCancel = () => {\n      const {\n        form\n      } = this.props;\n      form.resetFields();\n    };\n\n    this.renderFormView = () => {\n      const {\n        loading,\n        projectOptions,\n        formData\n      } = this.state;\n      const {\n        isOpen,\n        form,\n        currentUser = formData\n      } = this.props;\n      const {\n        getFieldDecorator\n      } = form;\n      const splWidth = isOpen ? 12 : 6;\n      const {\n        userName,\n        email,\n        phoneNumber,\n        gender,\n        position,\n        projectId,\n        dateOfBirth,\n        dateOfJoining\n      } = currentUser;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 7\n        }\n      }, loading && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      })), !loading && /*#__PURE__*/React.createElement(Form, {\n        style: {\n          paddingBottom: \"3rem\"\n        },\n        layout: \"vertical\",\n        onSubmit: () => this.handleSubmit(window.event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, isOpen && [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }\n      }, currentUser._id ? dictionary.EDIT_USER : dictionary.CREATE_USER))), currentUser._id && /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"href-txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, userName && userName.toUpperCase())))))], /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.USER_NAME,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"userName\", {\n        initialValue: userName || \"\",\n        rules: [{\n          required: true,\n          message: \"Please Enter the User Name\"\n        }, {\n          pattern: new RegExp(Regex.ALPHABET),\n          message: \"user name must be alphabets\"\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        className: \"commonText\",\n        placeholder: dictionary.USER_NAME,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.SELECT_POSITION,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"position\", {\n        initialValue: position || \"\",\n        rules: [{\n          required: true,\n          message: \"Please Select the Position\"\n        }]\n      })( /*#__PURE__*/React.createElement(Select, {\n        showSearch: true,\n        placeholder: dictionary.SELECT_POSITION,\n        optionFilterProp: \"children\",\n        filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Option, {\n        disabled: true,\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 23\n        }\n      }, dictionary.PLEASE_SELECT), OPTIONS.position)))), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.E_MAIL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"email\", {\n        initialValue: email || \"\",\n        rules: [{\n          required: true,\n          message: \"Please Enter the Email\"\n        }, {\n          type: \"email\",\n          message: \"Please enter the valid email\"\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        className: \"commonText\",\n        placeholder: dictionary.E_MAIL,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary[currentUser._id ? \"CHANGE_PASSWORD\" : \"PASSWORD\"],\n        extra: currentUser._id && \"Optional: To reset password enter here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"password\", {\n        initialValue: \"\",\n        rules: [{\n          required: !currentUser._id,\n          message: dictionary.INPUT_PASSWORD_MSG\n        }]\n      })( /*#__PURE__*/React.createElement(Input.Password, {\n        autoComplete: \"new-password\",\n        type: \"password\",\n        className: \"commonText\",\n        placeholder: dictionary.PASSWORD,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.PHONE_NUMBER,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"phoneNumber\", {\n        initialValue: phoneNumber || \"\",\n        rules: [{\n          required: true,\n          message: \"Please Enter the Phone Number\"\n        }, {\n          max: 10,\n          pattern: new RegExp(Regex.PHONE),\n          message: \"phone number must be 10 digit number\"\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        type: \"number\",\n        className: \"commonText\",\n        placeholder: dictionary.PHONE_NUMBER,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.SELECT_GENDER,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"gender\", {\n        initialValue: gender || \"\",\n        rules: [{\n          required: true,\n          message: \"Please Select the Gender\"\n        }]\n      })( /*#__PURE__*/React.createElement(Select, {\n        showSearch: true,\n        placeholder: dictionary.PLEASE_SELECT,\n        optionFilterProp: \"children\",\n        filterOption: (input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Option, {\n        disabled: true,\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 23\n        }\n      }, dictionary.PLEASE_SELECT), OPTIONS.gender))))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.SELECT_PROJECT,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"projectId\", {\n        initialValue: projectId || undefined\n      })( /*#__PURE__*/React.createElement(TreeSelect, {\n        showSearch: true,\n        style: {\n          width: 350\n        },\n        dropdownStyle: {\n          maxHeight: 400,\n          overflow: \"auto\"\n        },\n        placeholder: \"Please select\",\n        allowClear: true,\n        multiple: true,\n        treeDefaultExpandAll: true,\n        filterTreeNode: (input, option) => option.props.title.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }\n      }, projectOptions))))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.DATE_OF_BIRTH,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"dateOfBirth\", {\n        initialValue: dateOfBirth && moment(dateOfBirth) || \"\",\n        rules: [{\n          required: true,\n          message: \"Please Select Date Of Birth\"\n        }]\n      })( /*#__PURE__*/React.createElement(DatePicker, {\n        allowClear: false,\n        placeholder: dictionary.DATE_OF_BIRTH,\n        disabledDate: date => time.getAdultAge(date),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.DATE_OF_JOINING,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }\n      }, getFieldDecorator(\"dateOfJoining\", {\n        initialValue: dateOfJoining && moment(dateOfJoining) || \"\",\n        rules: [{\n          required: true,\n          message: \"Please Select Date Of Joining\"\n        }]\n      })( /*#__PURE__*/React.createElement(DatePicker, {\n        allowClear: false,\n        disabledDate: date => time.disabledateOfJoining(date),\n        placeholder: dictionary.DATE_OF_JOINING,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        icon: \"plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }, currentUser._id ? dictionary.UPDATE : dictionary.SUBMIT)), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        style: {\n          textAlign: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"reset\",\n        icon: \"undo\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 17\n        }\n      }, dictionary.CANCEL)))));\n    };\n\n    props.form.resetFields();\n    this.state = {\n      loading: true,\n      projectOptions: [],\n      formData: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getAllProjects\n    } = this.props;\n    getAllProjects();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const projectOptions = [];\n    const {\n      projectResponse\n    } = nextProps;\n\n    if (projectResponse && projectResponse.data) {\n      projectResponse.data.map((data, index) => {\n        projectOptions.push( /*#__PURE__*/React.createElement(TreeNode, {\n          value: data._id,\n          title: data.projectName,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        }));\n      });\n      this.setState({\n        projectOptions\n      });\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      createResponse,\n      updateResponse,\n      closeUser\n    } = this.props;\n\n    if (compareObjects(createResponse, prevProps.createResponse)) {\n      if (createResponse.success) {\n        this.setState({\n          loading: false,\n          formData: {}\n        });\n        message.success(\"User Successfully Created\");\n        closeUser && closeUser();\n        this.getUsers();\n      } else {\n        message.error(createResponse.errorMessage);\n      }\n    }\n\n    if (compareObjects(updateResponse, prevProps.updateResponse)) {\n      this.setState({\n        loading: false\n      });\n      message.success(\"user Successfully Updated\");\n      closeUser && closeUser(updateResponse);\n      this.getUsers();\n    }\n  }\n\n  renderInFullScreen() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMain, {\n      isCompany: true,\n      loggedIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Layout, {\n      className: \"layoutStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"headerStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }\n    }, dictionary.CREATE_USER), /*#__PURE__*/React.createElement(Content, {\n      className: \"contentStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentInnerDivStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 15\n      }\n    }, this.renderFormView())), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, isOpen ? this.renderFormView() : this.renderInFullScreen());\n  }\n\n}\n\nexport default Form.create()(NewUSer);","map":{"version":3,"sources":["/home/mithun/Documents/project-tracking/client/src/components/users/newUsers.js"],"names":["React","Component","moment","Layout","Form","Row","Col","Input","Button","Select","message","DatePicker","TreeSelect","dictionary","Spinner","HeaderMain","Sidebar","Footer","OPTIONS","compareObjects","time","Regex","Header","Content","TreeNode","Option","NewUSer","constructor","props","handleSubmit","e","form","preventDefault","validateFields","err","values","Object","keys","forEach","key","createUser","setState","loading","formData","getUsers","getAllUsers","data","updateUser","currentUser","id","_id","onCancel","resetFields","renderFormView","projectOptions","state","isOpen","getFieldDecorator","splWidth","userName","email","phoneNumber","gender","position","projectId","dateOfBirth","dateOfJoining","paddingBottom","window","event","EDIT_USER","CREATE_USER","toUpperCase","USER_NAME","initialValue","rules","required","pattern","RegExp","ALPHABET","SELECT_POSITION","input","option","children","toLowerCase","indexOf","PLEASE_SELECT","E_MAIL","type","INPUT_PASSWORD_MSG","PASSWORD","PHONE_NUMBER","max","PHONE","SELECT_GENDER","SELECT_PROJECT","undefined","width","maxHeight","overflow","title","DATE_OF_BIRTH","date","getAdultAge","DATE_OF_JOINING","disabledateOfJoining","UPDATE","SUBMIT","textAlign","CANCEL","componentDidMount","getAllProjects","UNSAFE_componentWillReceiveProps","nextProps","projectResponse","map","index","push","projectName","componentDidUpdate","prevProps","createResponse","updateResponse","closeUser","success","error","errorMessage","renderInFullScreen","render","create"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport React, { Component } from \"react\";\nimport moment from \"moment\";\nimport {\n  Layout,\n  Form,\n  Row,\n  Col,\n  Input,\n  Button,\n  Select,\n  message,\n  DatePicker,\n  TreeSelect,\n} from \"antd\";\nimport dictionary from \"../../config/static/Dictionary\";\nimport Spinner from \"../common/Spinner/Spinner\";\nimport HeaderMain from \"../../containers/header/header-container\";\nimport Sidebar from \"../../containers/sidebar/sidebar-container\";\nimport Footer from \"../common/footer\";\nimport * as OPTIONS from \"../../helpers/selectOptions\";\nimport { compareObjects } from \"../../utils/utils\";\nimport * as time from \"../../utils/timeUtils\";\nimport Regex from \"../../utils/regex\";\n\nconst { Header, Content } = Layout;\nconst { TreeNode } = TreeSelect;\nconst { Option } = Select;\n\nclass NewUSer extends Component {\n  constructor(props) {\n    super(props);\n    props.form.resetFields();\n    this.state = {\n      loading: true,\n      projectOptions: [],\n      formData: {},\n    };\n  }\n\n  componentDidMount() {\n    const { getAllProjects } = this.props;\n    getAllProjects();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const projectOptions = [];\n    const { projectResponse } = nextProps;\n    if (projectResponse && projectResponse.data) {\n      projectResponse.data.map((data, index) => {\n        projectOptions.push(\n          <TreeNode value={data._id} title={data.projectName} key={index} />\n        );\n      });\n      this.setState({ projectOptions });\n    }\n    this.setState({ loading: false });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { createResponse, updateResponse, closeUser } = this.props;\n    if (compareObjects(createResponse, prevProps.createResponse)) {\n      if (createResponse.success) {\n        this.setState({ loading: false, formData: {} });\n        message.success(\"User Successfully Created\");\n        closeUser && closeUser();\n        this.getUsers();\n      } else {\n        message.error(createResponse.errorMessage);\n      }\n    }\n    if (compareObjects(updateResponse, prevProps.updateResponse)) {\n      this.setState({ loading: false });\n      message.success(\"user Successfully Updated\");\n      closeUser && closeUser(updateResponse);\n      this.getUsers();\n    }\n  }\n\n  handleSubmit = (e) => {\n    const { form } = this.props;\n    e.preventDefault();\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        await Object.keys(values).forEach(\n          (key) => !values[key] && delete values[key]\n        );\n        this.createUser(values);\n        this.setState({ loading: true, formData: values });\n      } else {\n        this.setState({ loading: false });\n      }\n    });\n  };\n\n  getUsers = () => {\n    const { getAllUsers } = this.props;\n    getAllUsers();\n  };\n\n  createUser = (data) => {\n    const { createUser, updateUser, currentUser } = this.props;\n    if (currentUser) {\n      data.id = currentUser._id;\n      updateUser(data);\n    } else {\n      createUser(data);\n    }\n  };\n\n  onCancel = () => {\n    const { form } = this.props;\n    form.resetFields();\n  };\n\n  renderFormView = () => {\n    const { loading, projectOptions, formData } = this.state;\n    const { isOpen, form, currentUser = formData } = this.props;\n    const { getFieldDecorator } = form;\n    const splWidth = isOpen ? 12 : 6;\n    const {\n      userName,\n      email,\n      phoneNumber,\n      gender,\n      position,\n      projectId,\n      dateOfBirth,\n      dateOfJoining,\n    } = currentUser;\n    return (\n      <div>\n        {loading && (\n          <span>\n            <Spinner />\n          </span>\n        )}\n        {!loading && (\n          <Form\n            style={{ paddingBottom: \"3rem\" }}\n            layout=\"vertical\"\n            onSubmit={() => this.handleSubmit(window.event)}\n          >\n            {isOpen && [\n              <>\n                <Row gutter={16} className=\"row\">\n                  <Col span={12}>\n                    <h1>\n                      {currentUser._id\n                        ? dictionary.EDIT_USER\n                        : dictionary.CREATE_USER}\n                    </h1>\n                  </Col>\n                </Row>\n                {currentUser._id && (\n                  <Row gutter={16} className=\"row\">\n                    <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                      <Form.Item>\n                        <h4 className=\"href-txt\">\n                          {userName && userName.toUpperCase()}\n                        </h4>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                )}\n              </>,\n            ]}\n            <Row gutter={16} className=\"row\">\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item label={dictionary.USER_NAME}>\n                  {getFieldDecorator(\"userName\", {\n                    initialValue: userName || \"\",\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please Enter the User Name\",\n                      },\n                      {\n                        pattern: new RegExp(Regex.ALPHABET),\n                        message: \"user name must be alphabets\",\n                      },\n                    ],\n                  })(\n                    <Input\n                      className=\"commonText\"\n                      placeholder={dictionary.USER_NAME}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item label={dictionary.SELECT_POSITION}>\n                  {getFieldDecorator(\"position\", {\n                    initialValue: position || \"\",\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please Select the Position\",\n                      },\n                    ],\n                  })(\n                    <Select\n                      showSearch\n                      placeholder={dictionary.SELECT_POSITION}\n                      optionFilterProp=\"children\"\n                      filterOption={(input, option) =>\n                        option.props.children\n                          .toLowerCase()\n                          .indexOf(input.toLowerCase()) >= 0\n                      }\n                    >\n                      <Option disabled value=\"\">\n                        {dictionary.PLEASE_SELECT}\n                      </Option>\n                      {OPTIONS.position}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item label={dictionary.E_MAIL}>\n                  {getFieldDecorator(\"email\", {\n                    initialValue: email || \"\",\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please Enter the Email\",\n                      },\n                      {\n                        type: \"email\",\n                        message: \"Please enter the valid email\",\n                      },\n                    ],\n                  })(\n                    <Input\n                      className=\"commonText\"\n                      placeholder={dictionary.E_MAIL}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16} className=\"row\">\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item\n                  label={\n                    dictionary[currentUser._id ? \"CHANGE_PASSWORD\" : \"PASSWORD\"]\n                  }\n                  extra={\n                    currentUser._id && \"Optional: To reset password enter here\"\n                  }\n                >\n                  {getFieldDecorator(\"password\", {\n                    initialValue: \"\",\n                    rules: [\n                      {\n                        required: !currentUser._id,\n                        message: dictionary.INPUT_PASSWORD_MSG,\n                      },\n                    ],\n                  })(\n                    <Input.Password\n                      autoComplete=\"new-password\"\n                      type=\"password\"\n                      className=\"commonText\"\n                      placeholder={dictionary.PASSWORD}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item label={dictionary.PHONE_NUMBER}>\n                  {getFieldDecorator(\"phoneNumber\", {\n                    initialValue: phoneNumber || \"\",\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please Enter the Phone Number\",\n                      },\n                      {\n                        max: 10,\n                        pattern: new RegExp(Regex.PHONE),\n                        message: \"phone number must be 10 digit number\",\n                      },\n                    ],\n                  })(\n                    <Input\n                      type=\"number\"\n                      className=\"commonText\"\n                      placeholder={dictionary.PHONE_NUMBER}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item label={dictionary.SELECT_GENDER}>\n                  {getFieldDecorator(\"gender\", {\n                    initialValue: gender || \"\",\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please Select the Gender\",\n                      },\n                    ],\n                  })(\n                    <Select\n                      showSearch\n                      placeholder={dictionary.PLEASE_SELECT}\n                      optionFilterProp=\"children\"\n                      filterOption={(input, option) =>\n                        option.props.children\n                          .toLowerCase()\n                          .indexOf(input.toLowerCase()) >= 0\n                      }\n                    >\n                      <Option disabled value=\"\">\n                        {dictionary.PLEASE_SELECT}\n                      </Option>\n                      {OPTIONS.gender}\n                    </Select>\n                  )}\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16} className=\"row\">\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item label={dictionary.SELECT_PROJECT}>\n                  {getFieldDecorator(\"projectId\", {\n                    initialValue: projectId || undefined,\n                  })(\n                    <TreeSelect\n                      showSearch\n                      style={{ width: 350 }}\n                      dropdownStyle={{ maxHeight: 400, overflow: \"auto\" }}\n                      placeholder=\"Please select\"\n                      allowClear\n                      multiple\n                      treeDefaultExpandAll\n                      filterTreeNode={(input, option) =>\n                        option.props.title\n                          .toLowerCase()\n                          .indexOf(input.toLowerCase()) >= 0\n                      }\n                    >\n                      {projectOptions}\n                    </TreeSelect>\n                  )}\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16} className=\"row\">\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item label={dictionary.DATE_OF_BIRTH}>\n                  {getFieldDecorator(\"dateOfBirth\", {\n                    initialValue: (dateOfBirth && moment(dateOfBirth)) || \"\",\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please Select Date Of Birth\",\n                      },\n                    ],\n                  })(\n                    <DatePicker\n                      allowClear={false}\n                      placeholder={dictionary.DATE_OF_BIRTH}\n                      disabledDate={(date) => time.getAdultAge(date)}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Form.Item label={dictionary.DATE_OF_JOINING}>\n                  {getFieldDecorator(\"dateOfJoining\", {\n                    initialValue:\n                      (dateOfJoining && moment(dateOfJoining)) || \"\",\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please Select Date Of Joining\",\n                      },\n                    ],\n                  })(\n                    <DatePicker\n                      allowClear={false}\n                      disabledDate={(date) => time.disabledateOfJoining(date)}\n                      placeholder={dictionary.DATE_OF_JOINING}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16} className=\"row\">\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Button type=\"primary\" htmlType=\"submit\" icon=\"plus\">\n                  {currentUser._id ? dictionary.UPDATE : dictionary.SUBMIT}\n                </Button>\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={12}\n                xl={splWidth}\n                xxl={splWidth}\n                style={{ textAlign: \"right\" }}\n              >\n                <Button\n                  type=\"primary\"\n                  htmlType=\"reset\"\n                  icon=\"undo\"\n                  onClick={() => this.onCancel()}\n                >\n                  {dictionary.CANCEL}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </div>\n    );\n  };\n\n  renderInFullScreen() {\n    return (\n      <>\n        <HeaderMain isCompany loggedIn />\n        <Layout className=\"layoutStyle\">\n          <Sidebar {...this.props} />\n          <Layout>\n            <Header className=\"headerStyle\">{dictionary.CREATE_USER}</Header>\n            <Content className=\"contentStyle\">\n              <div className=\"contentInnerDivStyle\">\n                {this.renderFormView()}\n              </div>\n            </Content>\n            <Footer />\n          </Layout>\n        </Layout>\n      </>\n    );\n  }\n\n  render() {\n    const { isOpen } = this.props;\n    return <>{isOpen ? this.renderFormView() : this.renderInFullScreen()}</>;\n  }\n}\n\nexport default Form.create()(NewUSer);\n"]},"metadata":{},"sourceType":"module"}