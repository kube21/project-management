{"ast":null,"code":"var _jsxFileName = \"/home/mithun/Documents/project-tracking/client/src/components/projects/newProject.js\";\nimport React, { Component } from 'react';\nimport { Layout, Form, Row, Col, Input, Button, Select, message, DatePicker } from 'antd';\nimport moment from 'moment';\nimport './styles.scss';\nimport dictionary from '../../config/static/Dictionary';\nimport Spinner from '../common/Spinner/Spinner';\nimport HeaderMain from '../../containers/header/header-container';\nimport Sidebar from '../../containers/sidebar/sidebar-container';\nimport Footer from '../common/footer';\nimport { disablePastDates, disableFutureDate } from '../../utils/timeUtils';\nimport Regex from '../../utils/regex';\nconst {\n  Header,\n  Content\n} = Layout;\nconst {\n  Option\n} = Select;\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getProjects = () => {\n      const {\n        getAllProjects\n      } = this.props;\n      getAllProjects();\n    };\n\n    this.userResponse = response => {\n      const manager = [];\n      const client = [];\n      const lead = [];\n      response.map(data => {\n        if (data.position === 'MANAGER') {\n          manager.push( /*#__PURE__*/React.createElement(Option, {\n            key: String(data._id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 22\n            }\n          }, data.userName));\n        }\n\n        if (data.position === 'CLIENT') {\n          client.push( /*#__PURE__*/React.createElement(Option, {\n            key: String(data._id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }\n          }, data.userName));\n        }\n\n        if (data.position === 'LEADER') {\n          lead.push( /*#__PURE__*/React.createElement(Option, {\n            key: String(data._id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }\n          }, data.userName));\n        }\n      });\n      this.setState({\n        manager,\n        client,\n        lead\n      });\n    };\n\n    this.handleSubmit = e => {\n      const {\n        form\n      } = this.props;\n      e.preventDefault();\n      form.validateFields(async (err, values) => {\n        if (!err) {\n          await Object.keys(values).forEach(key => !values[key] && delete values[key]);\n          values.projectCompleted = values.projectCompleted === 'completed';\n          this.saveProject(values);\n          this.setState({\n            loading: true\n          });\n        }\n      });\n    };\n\n    this.saveProject = data => {\n      const {\n        saveProject,\n        updateProject,\n        currentProject\n      } = this.props;\n\n      if (currentProject) {\n        data.id = currentProject._id;\n        updateProject(data);\n        this.setState({\n          popup: true\n        });\n      } else {\n        saveProject(data);\n        this.setState({\n          popups: true,\n          formData: data\n        });\n      }\n    };\n\n    this.onCancel = () => {\n      const {\n        form\n      } = this.props;\n      form.resetFields();\n    };\n\n    this.renderFormView = () => {\n      const {\n        loading,\n        manager,\n        client,\n        lead,\n        initDate,\n        formData\n      } = this.state;\n      const {\n        isOpen,\n        form,\n        currentProject = formData\n      } = this.props;\n      const projectStatus = currentProject.projectCompleted ? 'Completed' : 'Incomplete';\n      const {\n        projectName,\n        technology,\n        managerId,\n        clientId,\n        leadId,\n        startDate,\n        endDate\n      } = currentProject;\n      const {\n        getFieldDecorator\n      } = form;\n      const splWidth = isOpen ? 12 : 6;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      }, loading && /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      })), !loading && /*#__PURE__*/React.createElement(Form, {\n        style: {\n          paddingBottom: '3rem'\n        },\n        layout: \"vertical\",\n        onSubmit: () => this.handleSubmit(window.event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }\n      }, isOpen && [/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, currentProject.id ? dictionary.EDIT_PROJECT : dictionary.CREATE_PROJECT))), currentProject.id && /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"href-txt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, projectName && projectName.toUpperCase())))))], /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.PROJECT_NAME,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      }, getFieldDecorator('projectName', {\n        initialValue: projectName || '',\n        rules: [{\n          required: true,\n          message: 'Please Enter the Project Name'\n        }, {\n          pattern: new RegExp(Regex.ALPHA_NUMERIC),\n          message: 'Project name must be Alphanumeric'\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        className: \"commonText\",\n        placeholder: dictionary.PROJECT_NAME,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 22\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.TECHNOLOGY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      }, getFieldDecorator('technology', {\n        initialValue: technology || '',\n        rules: [{\n          required: true,\n          message: 'Please Enter the Technology Name'\n        }, {\n          pattern: new RegExp(Regex.ALPHA_NUMERIC),\n          message: 'Technology must be Alphanumeric'\n        }]\n      })( /*#__PURE__*/React.createElement(Input, {\n        className: \"commonText\",\n        placeholder: dictionary.TECHNOLOGY,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 22\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.START_DATE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, getFieldDecorator('startDate', {\n        initialValue: startDate && moment(startDate) || '',\n        rules: [{\n          required: true,\n          message: 'Please Select Start Date'\n        }]\n      })( /*#__PURE__*/React.createElement(DatePicker, {\n        allowClear: false,\n        placeholder: dictionary.START_DATE,\n        onChange: date => this.setState({\n          initDate: date\n        }),\n        disabledDate: date => disablePastDates(date),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: dictionary.END_DATE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, getFieldDecorator('endDate', {\n        initialValue: endDate && moment(endDate) || '',\n        rules: [{\n          required: true,\n          message: 'Please Select End Date'\n        }]\n      })( /*#__PURE__*/React.createElement(DatePicker, {\n        allowClear: false,\n        placeholder: dictionary.END_DATE,\n        disabledDate: date => disableFutureDate(date, initDate || startDate && moment(startDate)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        icon: \"plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      }, currentProject.id ? dictionary.UPDATE : dictionary.SUBMIT)), /*#__PURE__*/React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        lg: 12,\n        xl: splWidth,\n        xxl: splWidth,\n        style: {\n          textAlign: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"reset\",\n        icon: \"undo\",\n        onClick: () => this.onCancel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, dictionary.CANCEL)))));\n    };\n\n    this.state = {\n      loading: true,\n      manager: [],\n      client: [],\n      lead: [],\n      initDate: null,\n      popup: false,\n      popups: false,\n      formData: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getAllUsers\n    } = this.props;\n    getAllUsers();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextprops) {\n    const {\n      popup,\n      popups\n    } = this.state;\n    const {\n      closeProject\n    } = this.props;\n    const {\n      userResponse,\n      projectCreateResponse,\n      projectUpdateResponse\n    } = nextprops;\n\n    if (userResponse && userResponse.data) {\n      this.userResponse(userResponse.data);\n      this.setState({\n        loading: false\n      });\n    }\n\n    if (projectCreateResponse && popups) {\n      if (projectCreateResponse.success) {\n        this.setState({\n          loading: false,\n          popups: false,\n          formData: {}\n        });\n        message.success('Project Successfully Created');\n        closeProject();\n        this.getProjects();\n      } else {\n        this.setState({\n          loading: false,\n          popups: false\n        });\n        message.error((projectCreateResponse === null || projectCreateResponse === void 0 ? void 0 : projectCreateResponse.errorMessage) || 'Error');\n      }\n    }\n\n    if (projectUpdateResponse && projectUpdateResponse.success && popup) {\n      this.setState({\n        popup: false\n      });\n      this.setState({\n        loading: false\n      });\n      message.success('Project Successfully Updated');\n      closeProject();\n      this.getProjects();\n    }\n  }\n\n  renderInFullScreen() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderMain, {\n      isCompany: true,\n      loggedIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Layout, {\n      className: \"layoutStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"headerStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }\n    }, dictionary.CREATE_PROJECT), /*#__PURE__*/React.createElement(Content, {\n      className: \"contentStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentInnerDivStyle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 15\n      }\n    }, this.renderFormView())), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, isOpen ? this.renderFormView() : this.renderInFullScreen());\n  }\n\n}\n\nexport default Form.create()(New);","map":{"version":3,"sources":["/home/mithun/Documents/project-tracking/client/src/components/projects/newProject.js"],"names":["React","Component","Layout","Form","Row","Col","Input","Button","Select","message","DatePicker","moment","dictionary","Spinner","HeaderMain","Sidebar","Footer","disablePastDates","disableFutureDate","Regex","Header","Content","Option","New","constructor","props","getProjects","getAllProjects","userResponse","response","manager","client","lead","map","data","position","push","String","_id","userName","setState","handleSubmit","e","form","preventDefault","validateFields","err","values","Object","keys","forEach","key","projectCompleted","saveProject","loading","updateProject","currentProject","id","popup","popups","formData","onCancel","resetFields","renderFormView","initDate","state","isOpen","projectStatus","projectName","technology","managerId","clientId","leadId","startDate","endDate","getFieldDecorator","splWidth","paddingBottom","window","event","EDIT_PROJECT","CREATE_PROJECT","toUpperCase","PROJECT_NAME","initialValue","rules","required","pattern","RegExp","ALPHA_NUMERIC","TECHNOLOGY","START_DATE","date","END_DATE","UPDATE","SUBMIT","textAlign","CANCEL","componentDidMount","getAllUsers","UNSAFE_componentWillReceiveProps","nextprops","closeProject","projectCreateResponse","projectUpdateResponse","success","error","errorMessage","renderInFullScreen","render","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Form, Row, Col, Input, Button, Select, message, DatePicker } from 'antd';\nimport moment from 'moment';\nimport './styles.scss';\nimport dictionary from '../../config/static/Dictionary';\nimport Spinner from '../common/Spinner/Spinner';\nimport HeaderMain from '../../containers/header/header-container';\nimport Sidebar from '../../containers/sidebar/sidebar-container';\nimport Footer from '../common/footer';\nimport { disablePastDates, disableFutureDate } from '../../utils/timeUtils';\nimport Regex from '../../utils/regex';\n\nconst { Header, Content } = Layout;\nconst { Option } = Select;\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      manager: [],\n      client: [],\n      lead: [],\n      initDate: null,\n      popup: false,\n      popups: false,\n      formData: {}\n    };\n  }\n\n  componentDidMount() {\n    const { getAllUsers } = this.props;\n    getAllUsers();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextprops) {\n    const { popup, popups } = this.state;\n    const { closeProject } = this.props;\n    const { userResponse, projectCreateResponse, projectUpdateResponse } = nextprops;\n    if (userResponse && userResponse.data) {\n      this.userResponse(userResponse.data);\n      this.setState({ loading: false });\n    }\n    if (projectCreateResponse && popups) {\n      if (projectCreateResponse.success) {\n        this.setState({ loading: false, popups: false, formData: {} });\n        message.success('Project Successfully Created');\n        closeProject();\n        this.getProjects();\n      } else {\n        this.setState({ loading: false, popups: false });\n        message.error(projectCreateResponse?.errorMessage || 'Error');\n      }\n    }\n    if (projectUpdateResponse && projectUpdateResponse.success && popup) {\n      this.setState({ popup: false });\n      this.setState({ loading: false });\n      message.success('Project Successfully Updated');\n      closeProject();\n      this.getProjects();\n    }\n  }\n\n  getProjects = () => {\n    const { getAllProjects } = this.props;\n    getAllProjects();\n  };\n\n  userResponse = response => {\n    const manager = [];\n    const client = [];\n    const lead = [];\n    response.map(data => {\n      if (data.position === 'MANAGER') {\n        manager.push(<Option key={String(data._id)}>{data.userName}</Option>);\n      }\n      if (data.position === 'CLIENT') {\n        client.push(<Option key={String(data._id)}>{data.userName}</Option>);\n      }\n      if (data.position === 'LEADER') {\n        lead.push(<Option key={String(data._id)}>{data.userName}</Option>);\n      }\n    });\n    this.setState({ manager, client, lead });\n  };\n\n  handleSubmit = e => {\n    const { form } = this.props;\n    e.preventDefault();\n    form.validateFields(async (err, values) => {\n      if (!err) {\n        await Object.keys(values).forEach(key => !values[key] && delete values[key]);\n        values.projectCompleted = values.projectCompleted === 'completed';\n        this.saveProject(values);\n        this.setState({ loading: true });\n      }\n    });\n  };\n\n  saveProject = data => {\n    const { saveProject, updateProject, currentProject } = this.props;\n    if (currentProject) {\n      data.id = currentProject._id;\n      updateProject(data);\n      this.setState({ popup: true });\n    } else {\n      saveProject(data);\n      this.setState({ popups: true, formData: data });\n    }\n  };\n\n  onCancel = () => {\n    const { form } = this.props;\n    form.resetFields();\n  };\n\n  renderFormView = () => {\n    const { loading, manager, client, lead, initDate, formData } = this.state;\n    const { isOpen, form, currentProject = formData } = this.props;\n    const projectStatus = currentProject.projectCompleted ? 'Completed' : 'Incomplete';\n    const {\n      projectName,\n      technology,\n      managerId,\n      clientId,\n      leadId,\n      startDate,\n      endDate\n    } = currentProject;\n\n    const { getFieldDecorator } = form;\n    const splWidth = isOpen ? 12 : 6;\n    return (\n      <div>\n        {loading && (\n          <span>\n            <Spinner />\n          </span>\n        )}\n        {!loading && (\n          <Form\n            style={{ paddingBottom: '3rem' }}\n            layout=\"vertical\"\n            onSubmit={() => this.handleSubmit(window.event)}\n          >\n            {isOpen && [\n              <>\n                <Row gutter={16} className=\"row\">\n                  <Col span={12}>\n                    <h1>\n                      {currentProject.id ? dictionary.EDIT_PROJECT : dictionary.CREATE_PROJECT}\n                    </h1>\n                  </Col>\n                </Row>\n                {currentProject.id && (\n                  <Row gutter={16} className=\"row\">\n                    <Col sm={12} md={12} lg={12} xl={splWidth}>\n                      <Form.Item>\n                        <h4 className=\"href-txt\">{projectName && projectName.toUpperCase()}</h4>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                )}\n              </>\n            ]}\n            <Row gutter={16} className=\"row\">\n              <Col sm={12} md={12} lg={12} xl={splWidth}>\n                <Form.Item label={dictionary.PROJECT_NAME}>\n                  {getFieldDecorator('projectName', {\n                    initialValue: projectName || '',\n                    rules: [\n                      {\n                        required: true,\n                        message: 'Please Enter the Project Name'\n                      },\n                      {\n                        pattern: new RegExp(Regex.ALPHA_NUMERIC),\n                        message: 'Project name must be Alphanumeric'\n                      }\n                    ]\n                  })(<Input className=\"commonText\" placeholder={dictionary.PROJECT_NAME} />)}\n                </Form.Item>\n              </Col>\n              <Col sm={12} md={12} lg={12} xl={splWidth}>\n                <Form.Item label={dictionary.TECHNOLOGY}>\n                  {getFieldDecorator('technology', {\n                    initialValue: technology || '',\n                    rules: [\n                      {\n                        required: true,\n                        message: 'Please Enter the Technology Name'\n                      },\n                      {\n                        pattern: new RegExp(Regex.ALPHA_NUMERIC),\n                        message: 'Technology must be Alphanumeric'\n                      }\n                    ]\n                  })(<Input className=\"commonText\" placeholder={dictionary.TECHNOLOGY} />)}\n                </Form.Item>\n              </Col>\n            </Row>\n            \n\n            <Row gutter={16} className=\"row\">\n              <Col sm={12} md={12} lg={12} xl={splWidth}>\n                <Form.Item label={dictionary.START_DATE}>\n                  {getFieldDecorator('startDate', {\n                    initialValue: (startDate && moment(startDate)) || '',\n                    rules: [\n                      {\n                        required: true,\n                        message: 'Please Select Start Date'\n                      }\n                    ]\n                  })(\n                    <DatePicker\n                      allowClear={false}\n                      placeholder={dictionary.START_DATE}\n                      onChange={date => this.setState({ initDate: date })}\n                      disabledDate={date => disablePastDates(date)}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n              <Col sm={12} md={12} lg={12} xl={splWidth}>\n                <Form.Item label={dictionary.END_DATE}>\n                  {getFieldDecorator('endDate', {\n                    initialValue: (endDate && moment(endDate)) || '',\n                    rules: [\n                      {\n                        required: true,\n                        message: 'Please Select End Date'\n                      }\n                    ]\n                  })(\n                    <DatePicker\n                      allowClear={false}\n                      placeholder={dictionary.END_DATE}\n                      disabledDate={date =>\n                        disableFutureDate(date, initDate || (startDate && moment(startDate)))}\n                    />\n                  )}\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16} className=\"row\">\n              <Col sm={12} md={12} lg={12} xl={splWidth} xxl={splWidth}>\n                <Button type=\"primary\" htmlType=\"submit\" icon=\"plus\">\n                  {currentProject.id ? dictionary.UPDATE : dictionary.SUBMIT}\n                </Button>\n              </Col>\n              <Col\n                sm={12}\n                md={12}\n                lg={12}\n                xl={splWidth}\n                xxl={splWidth}\n                style={{ textAlign: 'right' }}\n              >\n                <Button type=\"primary\" htmlType=\"reset\" icon=\"undo\" onClick={() => this.onCancel()}>\n                  {dictionary.CANCEL}\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        )}\n      </div>\n    );\n  };\n\n  renderInFullScreen() {\n    return (\n      <>\n        <HeaderMain isCompany loggedIn />\n        <Layout className=\"layoutStyle\">\n          <Sidebar {...this.props} />\n          <Layout>\n            <Header className=\"headerStyle\">{dictionary.CREATE_PROJECT}</Header>\n            <Content className=\"contentStyle\">\n              <div className=\"contentInnerDivStyle\">{this.renderFormView()}</div>\n            </Content>\n            <Footer />\n          </Layout>\n        </Layout>\n      </>\n    );\n  }\n\n  render() {\n    const { isOpen } = this.props;\n    return <>{isOpen ? this.renderFormView() : this.renderInFullScreen()}</>;\n  }\n}\n\nexport default Form.create()(New);\n"]},"metadata":{},"sourceType":"module"}