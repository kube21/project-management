{"ast":null,"code":"import moment from 'moment';\nexport const disablePastDates = (date1, date2) => {\n  if (date1) {\n    const result = moment(date1).diff(moment(date2), 'days');\n    return result < 0;\n  }\n\n  return false;\n}; // return false for future dates\n\nexport const disableFutureDate = (date1, date2) => {\n  if (date1) {\n    const result = moment(date1).diff(moment(date2), 'day' - 1);\n    return !(result > 0);\n  }\n\n  return false;\n}; // return false for past dates\n\nexport const disablePastDate = date1 => {\n  if (date1) {\n    const result = moment(date1);\n    return result < 0;\n  }\n\n  return false;\n};\nexport const disabledateOfJoining = (date1, date2) => {\n  if (date1) {\n    const result = moment(date2).diff(moment(date1), 'day' - 1);\n    return result < 0;\n  }\n\n  return false;\n}; // return true if the given date is at lease minimum 18 years\n\nexport const getAdultAge = date => {\n  const eighteenYears = moment().subtract(18, 'years').calendar();\n  const result = moment(eighteenYears).isSameOrBefore(moment(date).format('MM/DD/YYYY'));\n  return result;\n}; // get start and end time of current day\n\nexport const getToday = () => {\n  const start = `${moment().format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment().format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return {\n    start,\n    end\n  };\n}; // get start and end time of yesterday\n\nexport const getYesterday = () => {\n  const start = `${moment().subtract(1, 'd').format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment().subtract(1, 'd').format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return {\n    start,\n    end\n  };\n}; // get start and end time of the week\n\nexport const getWeek = () => {\n  const start = `${moment().subtract(6, 'd').format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment().format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return {\n    start,\n    end\n  };\n}; // get start and end time of a month\n\nexport const getMonth = () => {\n  const start = `${moment().subtract(29, 'd').format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment().format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return {\n    start,\n    end\n  };\n}; // get the start and end time of the given date\n\nexport const getStartAndEndTime = date => {\n  const start = `${moment(date).format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment(date).format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return {\n    start,\n    end\n  };\n}; // Returns the time in hh:mm:ss a format\n\nexport const getTime = date => {\n  return `${moment(date).format('LTS')}`;\n}; // Returns the time duration like 2:54:23\n\nexport const toHHMMSS = secs => {\n  const sec_num = parseInt(secs, 10);\n  const hours = Math.floor(sec_num / 3600);\n  const minutes = Math.floor(sec_num / 60) % 60;\n  const seconds = sec_num % 60;\n  return [hours, minutes, seconds].map(v => v < 10 ? `0${v}` : v).filter((v, i) => v !== '00' || i > 0).join(':');\n}; // Returns the given date in YYYY-MM-DD format\n\nexport const generalDate = date => {\n  return date ? moment(date).format('YYYY-MM-DD') : undefined;\n};","map":{"version":3,"sources":["/home/mithun/Documents/project-tracking/client/src/utils/timeUtils.js"],"names":["moment","disablePastDates","date1","date2","result","diff","disableFutureDate","disablePastDate","disabledateOfJoining","getAdultAge","date","eighteenYears","subtract","calendar","isSameOrBefore","format","getToday","start","end","getYesterday","getWeek","getMonth","getStartAndEndTime","getTime","toHHMMSS","secs","sec_num","parseInt","hours","Math","floor","minutes","seconds","map","v","filter","i","join","generalDate","undefined"],"mappings":"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","sourcesContent":["import moment from 'moment';\n\nexport const disablePastDates = (date1, date2) => {\n  if (date1) {\n    const result = moment(date1).diff(moment(date2), 'days');\n    return result < 0;\n  }\n  return false;\n};\n\n// return false for future dates\nexport const disableFutureDate = (date1, date2) => {\n  if (date1) {\n    const result = moment(date1).diff(moment(date2), 'day' - 1);\n    return !(result > 0);\n  }\n  return false;\n};\n\n// return false for past dates\nexport const disablePastDate = date1 => {\n  if (date1) {\n    const result = moment(date1);\n    return result < 0;\n  }\n  return false;\n};\n\nexport const disabledateOfJoining = (date1, date2) => {\n  if (date1) {\n    const result = moment(date2).diff(moment(date1), 'day' - 1);\n    return result < 0;\n  }\n  return false;\n};\n\n// return true if the given date is at lease minimum 18 years\nexport const getAdultAge = (date) => {\n  const eighteenYears = moment().subtract(18, 'years').calendar();\n  const result = moment(eighteenYears).isSameOrBefore(moment(date).format('MM/DD/YYYY'));\n  return result;\n};\n\n// get start and end time of current day\nexport const getToday = () => {\n  const start = `${moment().format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment().format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return { start, end };\n};\n\n// get start and end time of yesterday\nexport const getYesterday = () => {\n  const start = `${moment().subtract(1, 'd').format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment().subtract(1, 'd').format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return { start, end };\n};\n\n// get start and end time of the week\nexport const getWeek = () => {\n  const start = `${moment().subtract(6, 'd').format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment().format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return { start, end };\n};\n\n// get start and end time of a month\nexport const getMonth = () => {\n  const start = `${moment().subtract(29, 'd').format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment().format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return { start, end };\n};\n\n// get the start and end time of the given date\nexport const getStartAndEndTime = (date) => {\n  const start = `${moment(date).format('YYYY-MM-DDT00:00:00.000')}Z`;\n  const end = `${moment(date).format('YYYY-MM-DDT23:59:59.000')}Z`;\n  return { start, end };\n};\n\n// Returns the time in hh:mm:ss a format\nexport const getTime = (date) => {\n  return `${moment(date).format('LTS')}`;\n};\n\n// Returns the time duration like 2:54:23\nexport const toHHMMSS = secs => {\n  const sec_num = parseInt(secs, 10);\n  const hours = Math.floor(sec_num / 3600);\n  const minutes = Math.floor(sec_num / 60) % 60;\n  const seconds = sec_num % 60;\n\n  return [hours, minutes, seconds]\n    .map(v => (v < 10 ? `0${v}` : v))\n    .filter((v, i) => v !== '00' || i > 0)\n    .join(':');\n};\n\n// Returns the given date in YYYY-MM-DD format\nexport const generalDate = (date) => {\n  return date ? moment(date).format('YYYY-MM-DD') : undefined;\n};\n"]},"metadata":{},"sourceType":"module"}